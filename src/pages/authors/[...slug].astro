---
import AuthorLayout from '@layouts/AuthorLayout.astro';
import { getArticles, type Articles } from '@utils/articles';
import { getAuthorCollection, type Author } from '@utils/authors';
import { getTalks, type Talks } from '@utils/talks';

export async function getStaticPaths() {
  const authors = await getAuthorCollection();
  const articles = await getArticles();
  const talks = await getTalks();

  return Promise.all(
    authors.map(async (author) => {
      const slug = author.slug.replace('/authors/', '');

      const authorArticles = articles.filter(({ data }) => {
        const authorSlugs = data.authors.map(({ slug }) => slug as string);
        return authorSlugs.includes(slug);
      });

      const authorTalks = talks.filter(({ data }) => {
        const authorSlugs = data.authors.map(({ slug }) => slug as string);
        return authorSlugs.includes(slug);
      });

      return {
        params: { slug },
        props: {
          author,
          articles: authorArticles,
          talks: authorTalks,
        },
      };
    })
  );
}

interface Props {
  author: Author;
  articles: Articles;
  talks: Talks;
}

const { author, articles, talks } = Astro.props;
const { Content } = await author.render();
---

<AuthorLayout author={author} articles={articles} talks={talks}>
  <Content />
</AuthorLayout>
