---
import { Markdown } from '@astropub/md';
import JobGrid from '@components/Jobs.astro';
import ScrollTopButton from '@components/ScrollTopButton.astro';
import Author from '@components/article/Author.astro';
import Header from '@components/article/Header.astro';
import Series from '@components/article/Series.astro';
import { type Article } from '@utils/articles';
import { type Authors } from '@utils/authors';
import { type Serie } from '@utils/series';
import { Icon } from 'astro-icon/components';
import { getRelatedJobs } from '../utils/jobs';
import BaseLayout from './BaseLayout.astro';

interface Props {
  article: Article;
  nextArticle: Article;
  previousArticle: Article;
  series: Serie;
  authors: Authors;
}

const { article, series, authors, nextArticle, previousArticle } = Astro.props;
const searchString = authors.map(({ data }) => data.occupation).join(' ');
const jobs = getRelatedJobs(4, searchString);
const hasSeries = series?.articles?.length > 0;
const theme = article.data.theme;
---

<BaseLayout title={article.data.title} description={article.data.summary}>
  <Header slot="pageHeader" article={article} authors={authors} />
  <ScrollTopButton />
  <article class="grid grid-col-5 gap-10 my-10">
    <div class="col-start-1 col-end-2 max-w-96">
      <ul>
        {
          authors.map((author) => (
            <>
              <li class="my-2">
                <Author author={author} />
              </li>
            </>
          ))
        }
      </ul>

      {
        hasSeries && (
          <div class="py-4 xl:py-8">
            <h2 class="mb-2 text-xs uppercase tracking-wide text-gray-500 dark:text-gray-400">
              Part of series
            </h2>
            <Series series={series} />
          </div>
        )
      }

      {
        (previousArticle || nextArticle) && (
          <div class="flex justify-between py-4 xl:block xl:space-y-8 xl:py-8">
            {previousArticle && (
              <div>
                <h2 class="text-xs uppercase tracking-wide text-gray-500 dark:text-gray-400">
                  Previous Article
                </h2>
                <div>
                  <a href={previousArticle.slug}>
                    <Markdown of={previousArticle.data.title} />
                  </a>
                </div>
              </div>
            )}
            {nextArticle && (
              <div>
                <h2 class="text-xs uppercase tracking-wide text-gray-500 dark:text-gray-400">
                  Next Article
                </h2>
                <div>
                  <a href={nextArticle.slug}>
                    <Markdown of={nextArticle.data.title} />
                  </a>
                </div>
              </div>
            )}
          </div>
        )
      }

      <div class="pt-4 xl:pt-8">
        <a
          href="/articles"
          class={`relative inline-flex rounded-full border border-black py-4 px-9 text-base font-bold leading-none transition-colors delay-100 hover:bg-black hover:text-white`}
        >
          <Icon name="arrow" class="mr-4 w-6 rotate-180" />
          Back to all articles
        </a>
      </div>
    </div>

    <div class="col-start-2 col-end-5 row-start-1 prose">
      <slot />
    </div>
  </article>

  <div class="container mx-auto space-y-2 pt-6 pb-8 md:space-y-5">
    <h2
      class="text-3xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 sm:text-4xl sm:leading-10 md:text-6xl md:leading-14"
    >
      Jobs
    </h2>
    <JobGrid jobs={jobs} />
  </div>
</BaseLayout>

<script define:vars={{ theme }}>
  document.body.classList.add(theme);
</script>
